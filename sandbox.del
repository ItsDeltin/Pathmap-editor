import 'main.del';
import 'cursor menu adapter.del';

playervar Number freecamSwitchID!;

enum MenuAction
{
    Back = 1,
    FreecamIncrement = 2,
    FreecamDecrement = 3,
    Undo = 4,
    Redo = 5,
    Connect = 6
}

rule: 'CM: Make buttons: Main'
Event.OngoingPlayer
{
    createButton(
        '← undo',
        primaryAction: MenuAction.Undo,
        scale: 2,
        posX: -2.1,
        posY: -1,
        clickWidth: 0.4,
        clickHeight: 0.3,
        defaultColor: Color.Yellow,
        hoverColor: Color.Orange);
    createButton(
        'redo →',
        primaryAction: MenuAction.Redo,
        scale: 2,
        posX: -1.6,
        posY: -1,
        clickWidth: 0.4,
        clickHeight: 0.3,
        defaultColor: Color.Aqua,
        hoverColor: Color.SkyBlue);
    createButton(
        'main',
        scale: 2,
        posX: 0,
        posY: 1,
        defaultColor: Color.Yellow,
        interactable: false);
    createButton(
        'back',
        primaryAction: MenuAction.Back,
        scale: 2,
        posX: -2,
        posY: 1,
        defaultColor: Color.Red);
    
    freecamSwitchID = createButton(
        'freecam: off',
        primaryAction: MenuAction.FreecamIncrement,
        secondaryAction: MenuAction.FreecamDecrement,
        scale: 2.5,
        posX: -1.2,
        posY: 0.6,
        defaultColor: Color.Rose);
    
    createButton(
        'back',
        primaryAction: MenuAction.Back,
        scale: 2,
        posX: -2,
        posY: 1,
        defaultColor: Color.Red);
}

rule: 'CM: Freecam increment'
Event.OngoingPlayer
if (cm_currActionID == MenuAction.FreecamIncrement)
{
    cameraMode++;
    if (cameraMode == 3) cameraMode = 0;
    updateFreecamLabel();
}

rule: 'CM: Freecam decrement'
Event.OngoingPlayer
if (cm_currActionID == MenuAction.FreecamDecrement)
{
    cameraMode--;
    if (cameraMode == -1) cameraMode = 2;
    updateFreecamLabel();
}

rule: 'CM: Undo'
Event.OngoingPlayer
if (cm_currActionID == MenuAction.Undo)
if (CanUndo)
{
    Undo();
}

rule: 'CM: Redo'
Event.OngoingPlayer
if (cm_currActionID == MenuAction.Redo)
if (CanRedo)
{
    Redo();
}

void updateFreecamLabel() '(Subroutine) CM: Update freecam label'
{
    SetLabel(freecamSwitchID, ['freecam: off', 'freecam: on', 'freecam: gimbal'][cameraMode]);
}